#!/bin/bash

# jdbdumpall - Create a backup of the MySQL databases of all Joomla websites
#
# Copyright 2018 - 2024 René Kreijveld - email@renekreijveld.nl
#
# This program is free software; you may redistribute it and/or modify it.
#
# This script uses the 'jfunctions' script to extract information about a Joomla installation.
# The jfunctions script must be in the same folder as where this script is saved.
#
# Version history
# 1.0 Initial version
# 1.1 Code optimisations and use config file

# Constants
VERSION=1.1
MYPATH=$(cd "$(dirname "$0")"; pwd -P)
MYNAME=$(basename "$0")
CONFIG_FILE="$HOME/.config/jbashscripts/config"

# Check if the config file exists
if [[ -f "${CONFIG_FILE}" ]]; then
    # Source the config file to load the variables
    source "${CONFIG_FILE}"
else
    echo "Error: Config file not found at ${CONFIG_FILE}"
    exit 1
fi

# Function to show messages (honoring silent mode)
showmessage() {
    if [[ "${SILENT}" == "no" ]]; then
        echo "$1"
    fi
}

# Check if jfunctions script exists
if [[ ! -f "${MYPATH}/jfunctions" ]]; then
    echo "Error: Required script 'jfunctions' not found in ${MYPATH}. Exiting."
    exit 1
fi

# Check if the backup folder for databases exists
if [ ! -d "${backupfolder_databases}" ]
then
	echo "Error: backup directory does not exist."
	echo "Configure this with the 'jscriptsconfig' script."
	exit 1
fi

# display usage information
usage() {
	echo ""
	echo "${MYNAME} version ${VERSION}, written by René Kreijveld."
	echo ""
	echo "Usage: ${MYNAME} [-d] [-c] [-s] [-h]"
	echo ""
    echo "-d Add a date-time-stamp to the database dump filename."
    echo "-c Compress the database dump with gzip."
	echo "-s Silent. Do not display any messages to standard output."
	echo "-h Help. Display this info."
	echo ""
	exit 0
}

# Process the arguments
COMPRESS="no"
SHOWDATE="no"
USEFOLDER="no"
SILENT="no"
while getopts "dcbsh" opt; do
    case "${opt}" in
        d) SHOWDATE="yes" ;;
        c) COMPRESS="yes" ;;
        b) USEFOLDER="yes" ;;
        s) SILENT="yes" ;;
        h) usage ;;
        *) usage ;;
    esac
done

# Inform the user about the process
showmessage "${MYNAME} version ${VERSION}, written by René Kreijveld."

# Scan directories for Joomla instances
find "${rootfolder}" -maxdepth 2 -type d | while read -r DIR; do
    if [[ -f "${DIR}/configuration.php" ]]; then
        # Possible Joomla found
        cd ${DIR}

        # Get Joomla information
        source "${MYPATH}/jfunctions"

        # Add a timestamp if requested
        if [[ "${SHOWDATE}" == "yes" ]]; then
            NOW=$(date +".%Y%m%d-%H%M%S")
        else
            NOW=""
        fi

        DUMP_FILE="${backupfolder_databases}/${database}${NOW}.sql"

        if mysqldump --skip-opt --extended-insert=FALSE --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host="${host}" --user="${dbuser}" --password="${password}" "${database}" > "${DUMP_FILE}"; then
            if [[ "${COMPRESS}" == "yes" ]]; then
                gzip "${DUMP_FILE}"
                showmessage "${DUMP_FILE}.gz created (compressed with gzip)."
            else
                showmessage "${DUMP_FILE} created."
            fi
        else
            showmessage "Error creating database dump for database ${database}."
        fi
    fi
done